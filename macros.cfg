[homing_override]
gcode:
   {% if params.X is defined and params.Y is undefined and params.Z is undefined %} #Home X and move to safe location (min_safe_x mm) away from endstop.
        IDEX_HOME_X
  {% endif %}
  {% if params.X is undefined and params.Y is defined and params.Z is undefined %} #Home Y and move to safe location (min_safe_y mm) away from endstop.
        IDEX_HOME_Y
  {% endif %}
  {% if params.X is defined and params.Y is defined and params.Z is undefined %} #Home X and Y (in that order), moving each to their safe locations.
      IDEX_HOME_Y
      IDEX_HOME_X
 {% endif %}

 {% if params.X is undefined and params.Y is undefined and params.Z is defined %} #Home Z - Klipper won't allow this to run if XY aren't homed, so I've not added any of my own protection code here.
        HOME_Z
 {% endif %}
 {% if (params.X is defined and params.Y is defined and params.Z is defined) or (params.X is undefined and params.Y is undefined and params.Z is undefined)  %} #Home all axes (in order XYZ) if either G28 (no axes specified) or G28 XYZ (all axes specified) is called.
    IDEX_HOME_Y
    IDEX_HOME_X
    HOME_Z
 {% endif %}

 G90 #ensure absolute XYZ mode on completion.

[gcode_macro IDEX_HOME_Y]
gcode:
    #BED_MESH_CLEAR
    SET_KINEMATIC_POSITION Z=0
    # Home
    G28 Y0
    # Move away
    G1 Y220 F2400

[gcode_macro IDEX_HOME_X]
gcode:
    BED_MESH_CLEAR
    G1 Y125 F2400
    G28 X0
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SET_DUAL_CARRIAGE CARRIAGE=1
    G1 X150 F6000
    T0

[gcode_macro HOME_Z]
gcode:
    G1 X125 Y125 F6000
    G28 Z0
    G1 Z15 F2400
    
[gcode_macro homed]
gcode:
    { action_respond_info(printer.toolhead.homed_axes) }
                
[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    IDEX_HOME_Y
    IDEX_HOME_X
    HOME_Z
    #G28
    #CLEAN_NOZZLE
    #G28 Z                 ; reset z so attach_probe can work
    Z_TILT_ADJUST
    HOME_Z
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default
    SET_GCODE_OFFSET Z=0 MOVE=1 #reset offset to 0
    SET_GCODE_OFFSET Z=-0.125 MOVE=1 #set new offset
    #G28
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    G0 X124 Y1 Z30 F3600
    
    ##	Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##	Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------

[gcode_macro HOME]
gcode:
    IDEX_HOME_Y
    IDEX_HOME_X
    HOME_Z

[gcode_macro HOME_XY]
gcode:
    IDEX_HOME_Y
    IDEX_HOME_X

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
#   {% set active_extruders = [] %}
   {% set bedtemp = params.BED|int %}
   {% set hotend0temp = params.HOTEND0|int %}
   {% set hotend1temp = params.HOTEND1|int %}
   {% set chambertemp = params.CHAMBER|default(0)|int %}
   {% set e1 = [] %}
   {% set e2 = [] %}
   {% set active_extruders = [] %}

 			{% if hotend0temp <= 100 %}
                 { action_respond_info("EXTRUDER 1 OFF") }
                 {% set e1 = 0 %}
 			{% endif %}
 			{% if hotend0temp >= 100 %}
 				{ action_respond_info("EXTRUDER 1 ON") }
                 {% set e1 = 1 %}
 			{% endif %}

 			{% if hotend1temp <= 100 %}
 				{ action_respond_info("EXTRUDER 2 OFF ") }
                 {% set e2 = 0 %}
 			{% endif %}
 			{% if hotend1temp >= 100 %}
 				{ action_respond_info("EXTRUDER 2 ON") }
                 {% set e2 = 2 %}
 			{% endif %}

# Below is for Voron Tap
    M117 Preheating nozzle
    M104 S150                          ; Start nozzle heating to 150C - soften filament, but no ooze
    
    {% if 'BED' in params %}
        M117 Heating bed               ; Add the heating codes for Superslicer
        M190 S{ params.BED }
    {% endif %}
    
    M109 S150                          ; Wait for nozzle to heat to 150C
    
#    SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE=0
    {% if not ('xyz' in printer.toolhead.homed_axes) %}
        G32                            ; home all axes, Z Tilt Adjust, etc.
    {% endif %}
    
;     {% if ('HOTEND0' in params and params.HOTEND0 > 0) 
;           and ('HOTEND1' in params and params.HOTEND1 > 0) 
;           and (printer.idex_offsets_calibration.last_offset_x == None 
;                or printer.idex_offsets_calibration.last_offset_y == None 
;                or printer.idex_offsets_calibration.last_offset_z == None) %}
;         CALIBRATE_IDEX_OFFSETS
;         UPDATE_IDEX_OFFSETS
;     {% endif %}
    
    {% if 'HOTEND0' in params and params.HOTEND0|int > 0 %}
        M117 Heating T0 nozzle 
        M104 T0 S{ params.HOTEND0 }
    {% endif %}
    {% if 'HOTEND1' in params and params.HOTEND1|int > 0 %}
        M117 Heating T1 nozzle 
        M104 T1 S{ params.HOTEND1 }
    {% endif %}
    
    
    {% if 'BED' in params %}
        M117 Heating bed               ; Add the heating codes for Superslicer
        M190 S{ params.BED }
    {% endif %}
    {% if 'HOTEND0' in params and params.HOTEND0|int > 0 %}
        M117 Waiting to heat T0 nozzle 
        M109 T0 S{ params.HOTEND0 }
    {% endif %}
    {% if 'HOTEND1' in params and params.HOTEND1|int > 0 %}
        M117 Waiting to heat T1 nozzle 
        M109 T1 S{ params.HOTEND1 }
    {% endif %}

       {% set active_extruders = e1 + e2 %}
       { action_respond_info("Active Extruder Sequence: %d - 0 None - 1 Left Only - 2 Right Only - 3 Both" %(active_extruders)) }

#PrintStart 0 Sequence

                {% if active_extruders == 0 %}
        			{ action_respond_info("Activating Printstart 0") }
                    { action_respond_info("No Extruders Active. Please set an active extruder in your slicer") }

#PrintStart 1 Sequence
                     {% elif active_extruders == 1 %}
            			{ action_respond_info("Activating Printstart 1") }
                        BED_MESH_PROFILE LOAD=default
                        SET_GCODE_OFFSET Z=0
                        PURGE_LINE_T0
                        #PURGE_LINE_T1

#PrintStart 2 Sequence
                     {% elif active_extruders == 2 %}
            			{ action_respond_info("Activating Printstart 2") }
                        BED_MESH_PROFILE LOAD=default
                        SET_GCODE_OFFSET Z=0
                        #PURGE_LINE_T0
                        PURGE_LINE_T1
#PrintStart 3 Sequence
                     {% elif active_extruders == 3 %}
             			{ action_respond_info("Activating Printstart 3") }
 #                       BED_MESH_CALIBRATE
 #                       BED_MESH_PROFILE LOAD=default
 #                       SET_GCODE_OFFSET Z=0
                        PURGE_LINE_T0
                        PURGE_LINE_T1
  			    {% endif %}   


    #M117 Clean nozzle...
    #clean_nozzle
    #G28 Z                          ; home z axis again after cleaning nozzle
    #CALIBRATE_Z                    ; this replaces the second Z homing
    #BED_MESH_PROFILE LOAD=default  ; load default bed mesh
    G90
    G1 Z30 F3000                   ; move nozzle away from bed
    M117 Printing...


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    T0
    G0 X125 Y240 F3600       ; park nozzle at rear
    {% if printer.toolhead.position.z < 150 %}
        G0 Z150
    {% endif %}
    BED_MESH_CLEAR

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% if printer.dual_carriage.active_carriage == "CARRIAGE_0" %}
        {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    {% else %}
        {% set max_velocity = printer.configfile.settings['extruder1'].max_extrude_only_velocity %}
    {% endif %}
    SAVE_GCODE_STATE NAME=load_state
    M300 # beep
    G91
    G92 E0
    G1 E350 F{max_velocity} # fast-load
    G1 E25 F{speed} # purge
    M300
    M300
    RESTORE_GCODE_STATE NAME=load_state
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% if printer.dual_carriage.active_carriage == "CARRIAGE_0" %}
        {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    {% else %}
        {% set max_velocity = printer.configfile.settings['extruder1'].max_extrude_only_velocity %}
    {% endif %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    M300 # beep
    G92 E0
    G1 E25 F{speed} # purge
    G1 E-420 F{max_velocity} # fast-unload
    M300
    M300
    RESTORE_GCODE_STATE NAME=unload_state    

[gcode_macro PURGE_LINE_T0]
gcode:
#PURGE_LINE T0
    T0
    G90
    G0 X124 Y1 F6000

    G0 Z0.4
    G91
    G1 X-120 E25 F1200;
    G1 Y2
    G1 X120 E25 F1200;
    G1 E-1
    G92 E0;

[gcode_macro PURGE_LINE_T1]
gcode:
    #PURGE_LINE T1
    T1
    G90
    G0 X126 Y1 F6000

    G0 Z0.4
    G91
    G1 X120 E25 F1200;
    G1 Y2
    G1 X-120 E25 F1200;
    G1 E-1
    G92 E0;
