########################################
# Basic Macros
########################################

[gcode_macro IDEX_HOME_Y]
gcode:
    # Home
    G28 Y0
    # Move away
    G1 Y220 F2400

[gcode_macro IDEX_HOME_X]
gcode:
    G28 X0
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SET_DUAL_CARRIAGE CARRIAGE=1
    G1 X150 F6000
    T0

[gcode_macro print_start]
gcode:
    M117 Homing...                 ; display message
    #G28 X0 Y0 Z0

    #PURGE_LINE T0
    T0
    G90
    G0 X124 Y1 F6000

    # G0 Z0.4
    # G91
    # G1 X-120 E25 F1200;
    # G1 Y2
    # G1 X120 E25 F1200;
    # G1 E-1
    # G92 E0;

    #PURGE_LINE T1
    T1
    G90
    G0 X126 Y1 F6000

    # G0 Z0.4
    # G91
    # G1 X120 E25 F1200;
    # G1 Y2
    # G1 X-120 E25 F1200;
    # G1 E-1
    # G92 E0;

    G90
    G1 Z15.0 F600 ;move the platform down 15mm
    G92 E0 ;zero the extruded length again
    T0
    G1 F9000
    M117 Printing...

[gcode_macro print_end]
#   Use PRINT_END for the slicer ending script - PLEASE CUSTOMISE THE SCRIPT FO$
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    #G1 E-4.0 F3600                 ; retract
    G91                            ; relative positioning
    #G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    M104 S0                        ; turn off hotend
    M140 S0                        ; turn off bed
    M106 S0                        ; turn off fan
    G1 Z20 F3000                    ; move nozzle up 20mm
    G90                            ; absolute positioning
    G0  X125 Y240 F3600            ; park nozzle at rear
    M117 Finished!                 ; display message
    TURN_OFF_HEATERS
    M107
    #SET_FAN_SPEED FAN=chamber_fan SPEED=0


[display_template _heater_temperatureT0]
param_heater_name: "extruder"
text:
  {% if param_heater_name in printer %}
    {% set heater = printer[param_heater_name] %}
    # Show glyph
    {% if param_heater_name == "heater_bed" %}
      {% if heater.target %}
        {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
        ~bed_heat{frame}~
      {% else %}
        ~bed~
      {% endif %}
    {% else %}
      ~extruder~
    {% endif %}
    # Show temperature
    { "%3.0f" % (heater.temperature,) }
    # Optionally show target
    {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (heater.target,) }
    {% endif %}
    ~degrees~
  {% endif %}


[display_template _heater_temperatureT1]
param_heater_name: "extruder1"
text:
  {% if param_heater_name in printer %}
    {% set heater = printer[param_heater_name] %}
    # Show glyph
    {% if param_heater_name == "heater_bed" %}
      {% if heater.target %}
        {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
        ~bed_heat{frame}~
      {% else %}
        ~bed~
      {% endif %}
    {% else %}
      ~extruder~
    {% endif %}
    # Show temperature
    { "%3.0f" % (heater.temperature,) }
    # Optionally show target
    {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (heater.target,) }
    {% endif %}
    ~degrees~
  {% endif %}

[display_template _fan_speed]
text:
  {% if 'fan' in printer %}
    {% set speed = printer.fan.speed %}
    {% if speed %}
      {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}
    { "{:>4.0%}".format(speed) }
  {% endif %}
